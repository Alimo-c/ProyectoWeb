{"version":3,"sources":["assets/img/user-icon.png","services/user.services.js","contexts/UserContext.js","pages/Login/Login.jsx","Components/About/Objectives/Objective/Objective.jsx","Components/About/Objectives/Objectives.jsx","pages/About/About.jsx","Components/User/Logout/Logout.jsx","Components/Admin/Post/Post.jsx","Components/User/Button/Button.jsx","Components/User/Button/ButtonActive.jsx","Components/User/PostCard/Edit.jsx","Components/User/PostCard/PostCard.jsx","Components/Admin/MyPosts/MyPosts.jsx","pages/Admin/Admin.jsx","Components/User/AllPosts/AllPosts.jsx","pages/User/User.jsx","pages/NotFound/NotFound.jsx","pages/Redirect/RedirectUser.jsx","Components/PrivateRoute/PrivateRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","services","login","username","password","a","fetch","method","headers","body","JSON","stringify","response","ok","json","data","verifyToken","token","getAllPost","limit","page","Authorization","getAllFav","getMyPost","createPost","title","description","image","editPost","_id","giveAlike","console","log","getOne","giveFav","addComment","active","UserContext","React","createContext","TOKEN_KEY","getToken","localStorage","getItem","UserProvider","props","useState","undefined","setToken","user","setUser","useEffect","verifyTokenAsync","lsToken","userService","role","setTokenAll","setItem","useCallback","loginAsync","status","tokenRes","error","logout","posts","postAsync","message","edits","editAsync","allPost","allPostAsync","pages","myPost","myPostAsync","allFav","allFavAsync","One","OneAsync","like","likeAsync","favorite","favAsync","comment","commentAsync","activeApost","activeAPostAsync","value","useMemo","Provider","useUserContext","context","useContext","Error","Login","setUsername","setPassword","setError","onChange","e","save","target","onSubmitHandler","preventDefault","logged","replace","to","className","onSubmit","type","placeholder","Objective","src","alt","Objectives","About","Logout","navigate","useNavigate","onClick","Post","name","setTitle","setDescription","setImage","postHandler","posted","Button","ButtonActive","Edit","editHandler","edited","PostCard","post","aComment","likes","comments","length","numLike","setNumLike","isLiked","setIsLiked","makeAcomment","map","acomment","MyPosts","setPage","setPages","setPosts","fetchPost","myPostedPosts","pageNumber","Admin","AllPosts","allPostedPosts","User","NotFound","rolePages","RedirectUser","PrivateRoute","children","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.531891bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user-icon.413b6256.png\";","const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\n\r\nconst services = {};\r\n\r\nservices.login = async (username, password) => {\r\n    const response = await fetch(`${BASE_URL}/auth/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        })\r\n    });\r\n\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n    };\r\n\r\n    return {};\r\n};\r\n\r\nservices.verifyToken = async (token) => {\r\n    const response = await fetch(`${BASE_URL}/auth/whoami`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        //////////////////////////////\r\n        //console.log(data);\r\n        //console.log(token);\r\n        //////////////////////////////\r\n        return data;\r\n    };\r\n\r\n    return {};\r\n};\r\n\r\n//funcion que trae todos los posts\r\nservices.getAllPost = async (token, limit = 10, page = 0) => {\r\n    const response = await fetch(`${BASE_URL}/post/all?limit=${limit}&page=${page}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n    };\r\n\r\n    return {};\r\n};\r\n\r\nservices.getAllFav = async (token) => {\r\n    const response = await fetch(`${BASE_URL}/post/fav`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n    };\r\n    return{};\r\n};\r\n\r\n//funcion que se encarga de traer los post del admin\r\nservices.getMyPost = async (token, limit = 15, page = 0) => {\r\n    const response = await fetch(`${BASE_URL}/post/owned?limit=${limit}&page=${page}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n    };\r\n\r\n    return {};\r\n};\r\n\r\n//funcion para que el admin suba un post\r\nservices.createPost = async (token, title, description, image) => {\r\n    // console.log(\"token:\");\r\n    // console.log(token);\r\n    const response = await fetch(`${BASE_URL}/post/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            title: title,\r\n            description: description,\r\n            image: image\r\n        })\r\n    });\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n    //console.log(data);\r\n};\r\n\r\n//funcion para que el admin edite un post\r\nservices.editPost = async (token, title, description, image, _id) => {\r\n    const response = await fetch(`${BASE_URL}/post/update/${_id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            title: title,\r\n            description: description,\r\n            image: image\r\n        })\r\n    });\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n    //console.log(data);\r\n};\r\n\r\nservices.giveAlike = async (token, _id) => {\r\n    console.log(\"token:\");\r\n    console.log(token);\r\n    console.log(_id);\r\n\r\n    const response = await fetch(`${BASE_URL}/post/like/${_id}`, {\r\n        \r\n        method: \"PATCH\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n    console.log(\"prueba2\");\r\n\r\n    if(response.ok){\r\n        console.log(\"prueba\");\r\n        const data = await response.json();\r\n        \r\n        return data;\r\n    }\r\n    return {};\r\n};\r\n\r\n\r\nservices.getOne = async (token, _id) => {\r\n    const response = await fetch(`${BASE_URL}/post/one/${_id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    if(response.ok){\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    return {};\r\n\r\n};\r\n\r\n\r\nservices.giveFav = async (token, _id) => {\r\n\r\n    const response = await fetch(`${BASE_URL}/post/fav/${_id}`, {\r\n        \r\n        method: \"PATCH\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    if(response.ok){\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    return {};\r\n};\r\n\r\nservices.addComment = async (token, _id, description) => {\r\n    \r\n    const response = await fetch(`${BASE_URL}/post/comment/${_id}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            description: description,\r\n        })\r\n    });\r\n    \r\n    if(response.ok){\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    return {};\r\n};\r\n\r\nservices.active = async (token, _id) => {\r\n    console.log(\"antes de servicios\");\r\n    const response = await fetch(`${BASE_URL}/post/toggle/${_id}`, {\r\n        \r\n        method: \"PATCH\",\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n    console.log(\"despues de servicios\");\r\n    if(response.ok){\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    return {};\r\n};\r\n\r\nexport default services;","import { data } from \"autoprefixer\";\r\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport userService from './../services/user.services';\r\n\r\nconst UserContext = React.createContext();\r\nconst TOKEN_KEY = \"token\";\r\nconst getToken = () => localStorage.getItem(TOKEN_KEY);\r\n\r\nexport const UserProvider = (props) => {\r\n    const [token, setToken] = useState(undefined);\r\n    const [user, setUser] = useState(undefined);\r\n    \r\n\r\n    useEffect(() => {\r\n        const verifyTokenAsync = async () => {\r\n            const lsToken = getToken();\r\n\r\n            if(lsToken) {\r\n                const { username, role } = await userService.verifyToken(lsToken);\r\n                if(username && role) {\r\n                    setUser({ username, role });\r\n                    setTokenAll(lsToken);\r\n                };\r\n            };\r\n        };\r\n\r\n        verifyTokenAsync();\r\n    }, [token]);\r\n\r\n    const setTokenAll = (token) => {\r\n        localStorage.setItem(TOKEN_KEY, token);\r\n        setToken(token);\r\n    };\r\n\r\n    const login = useCallback((username, password)=> {\r\n        const loginAsync = async () => {\r\n            let status = false;\r\n            try {\r\n                const { token: tokenRes } = await userService.login(username, password);\r\n\r\n                if(tokenRes) {\r\n                    setTokenAll(tokenRes);\r\n                    status = true;\r\n                };\r\n            } \r\n            catch (error) {\r\n                console.error(error);\r\n                console.error(\"Error in login\");\r\n            } \r\n            finally {\r\n                return status;\r\n            }\r\n        };\r\n\r\n        return loginAsync();\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setUser(undefined);\r\n        setTokenAll(undefined);\r\n    }, []);\r\n\r\n    //no se si se debe utilizar usecallback o no, solo segui la logica de login\r\n    const posts = useCallback((title, description, image) => {\r\n        let status = false;\r\n        const postAsync = async () => {\r\n            try {\r\n                //token no ha cargado cuando se intenta correr\r\n                //se opto por usar getToken(), el cual llama el valor del localstorage\r\n                const {message: messageRes} = await userService.createPost(getToken(), title, description, image);\r\n\r\n                if (messageRes) {\r\n                    status = true;\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n                console.log(\"Error in post\");\r\n            }\r\n            finally {\r\n                return status;\r\n            }\r\n        };\r\n\r\n        return postAsync();\r\n    }, []);\r\n\r\n    const edits = useCallback((title, description, image, _id) => {\r\n        let status = false;\r\n        const editAsync = async () => {\r\n            try {\r\n                //token no ha cargado cuando se intenta correr\r\n                //se opto por usar getToken(), el cual llama el valor del localstorage\r\n                const {message: messageRes} = await userService.editPost(getToken(), title, description, image, _id);\r\n\r\n                if (messageRes) {\r\n                    status = true;\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n                console.log(\"Error in edit\");\r\n            }\r\n            finally {\r\n                return status;\r\n            }\r\n        };\r\n\r\n        return editAsync();\r\n    }, []);\r\n\r\n    //validaciones para traer todos los post o devolver error\r\n    const allPost = useCallback( (limit, page) => {\r\n        const allPostAsync = async () => {\r\n            try {\r\n                //token no ha cargado cuando se intenta correr\r\n                //se opto por usar getToken(), el cual llama el valor del localstorage\r\n                const {data, pages} = await userService.getAllPost(getToken(), limit, page);\r\n                \r\n                if (data) {\r\n                    // console.log(\"userContext data:\")\r\n                    // console.log(data);\r\n                    return {data, pages};\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.log(\"data undefined\");\r\n                return data;\r\n            }\r\n        };\r\n\r\n        return allPostAsync();\r\n    }, []);\r\n    \r\n    //validaciones para traer los post del admin o devolver un error\r\n    const myPost = useCallback( (limit, page) => {\r\n        const myPostAsync = async () => {\r\n            try {\r\n                //token no ha cargado cuando se intenta correr\r\n                //se opto por usar getToken(), el cual llama el valor del localstorage\r\n                \r\n                /////////////////\r\n                const {data, pages} = await userService.getMyPost(getToken(), limit, page);\r\n                if (data) {\r\n                    // console.log(\"userContext data:\")\r\n                    // console.log(data);\r\n                    return {data, pages};\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.log(\"data undefined\");\r\n                return data;\r\n            }\r\n        };\r\n\r\n        return myPostAsync();\r\n    }, []);\r\n\r\n    const allFav = () => {\r\n        const allFavAsync = async () => {\r\n            try {\r\n                const data = await userService.getAllFav(getToken());\r\n\r\n                if (data) {\r\n                    console.log(data);\r\n                    return data;\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.log(\"data undefined\");\r\n                return data;\r\n            }\r\n        };\r\n        return allFavAsync();\r\n    };\r\n\r\n    const One = (_id) => {\r\n        const OneAsync = async () =>{\r\n            try{\r\n                const response = await userService.getOne(getToken(), _id);\r\n    \r\n                \r\n                if (response) {\r\n                    return response;\r\n                };\r\n\r\n            }\r\n            catch (error) {\r\n                console.log(\"post notfound\");\r\n                /*return response;*/\r\n            }\r\n        };\r\n        return OneAsync();\r\n    };\r\n\r\n    const like = ((_id) => {\r\n        const likeAsync = async () => {\r\n            try {\r\n                const response = await userService.giveAlike(getToken(),_id);\r\n                //console.log(response);\r\n                return response;\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n                console.log(\"Error in post\");\r\n            }\r\n        };\r\n\r\n        return likeAsync();\r\n    });\r\n\r\n    const favorite = ((_id) => {\r\n        const favAsync = async () => {\r\n            try {\r\n                const response = await userService.giveFav(getToken(),_id);\r\n                // console.log(response);\r\n                return response;\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n                console.log(\"Error in post\");\r\n            }\r\n        };\r\n\r\n        return favAsync();\r\n    });\r\n\r\n    const comment = useCallback( (_id, description) => {\r\n        const commentAsync = async () => {\r\n            try {\r\n                const response = await userService.addComment(getToken(), _id, description);\r\n                \r\n                if (response.ok) {\r\n                    return response;\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.log(\"data undefined\");\r\n                return data;\r\n            }\r\n        };\r\n        return commentAsync();\r\n    }, []);\r\n\r\n    const activeApost = ( (_id) => {\r\n        const activeAPostAsync = async () => {\r\n            console.log(\"antes de context try\");\r\n            try {\r\n                console.log(\"antes de context en try\");\r\n                //token no ha cargado cuando se intenta correr\r\n                //se opto por usar getToken(), el cual llama el valor del localstorage\r\n                const response = await userService.active(getToken(), _id);\r\n                console.log(response);\r\n                if (response.ok) {\r\n                    // console.log(\"userContext data:\")\r\n                    // console.log(data);\r\n                    return response;\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.log(\"data undefined\");\r\n                return data;\r\n            }\r\n        };\r\n\r\n        return activeAPostAsync();\r\n    });\r\n\r\n    const value = useMemo(()=> ({\r\n        token: token,\r\n        user: user,\r\n        login: login,\r\n        logout: logout,\r\n        posts: posts,\r\n        edits: edits,\r\n        myPost: myPost,\r\n        allPost: allPost,\r\n        allFav: allFav,\r\n        One: One,\r\n        like: like,\r\n        favorite: favorite,\r\n        comment: comment,\r\n        activeApost: activeApost\r\n    }), [token, user, login, logout, posts, edits, myPost, allPost, allFav, One, like, favorite,comment, activeApost]);\r\n\r\n    return <UserContext.Provider value={value} {...props} />;\r\n};\r\n\r\nexport const useUserContext = () => {\r\n    const context = React.useContext(UserContext);\r\n\r\n    if (!context) {\r\n        throw new Error(\"useUserContext() must be inside of UserProvider\");\r\n    }\r\n\r\n    return context;\r\n};","import { useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport iconUser from '../../assets/img/user-icon.png'\r\n\r\nimport { useUserContext } from '../../contexts/UserContext';\r\n\r\nexport default function Login() {\r\n    const { login, token } = useUserContext();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const onChange = (e, save) => {\r\n        save(e.target.value);\r\n    }\r\n\r\n    const onSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n        const logged = await login(username, password);\r\n\r\n        setError(!logged);\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    if (token) {\r\n        console.log(\"Ya se loggea\")\r\n        return <Navigate replace to=\"/redirect\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex justify-center items-center min-h-screen bg-hero-pattern bg-no-repeat bg-cover\">\r\n            <main className=\"w-3/5 h-3/5 max-w-xl bg-gray-100 bg-opacity-75 rounded-md p-8 md:p-10 shadow-md\">\r\n                <form onSubmit={onSubmitHandler} className=\"flex flex-col gap-4 items-center justify-center\">\r\n                    <h2 className=\"text-black font-monserrat font-black text-5xl mb-1\">Inicio de sesión</h2>\r\n                    <h3 className=\"text-black font-monserrattext-2xl mb-6\">comparte tus mejores momentos</h3>\r\n\r\n                    {error && <p className=\"w-full rounded p-3 text-center text-white font-roboto bg-red-700 select-none\">\r\n                        Un error ha ocurrido en el inicio de sesión\r\n                    </p>}\r\n\r\n                        <input className=\"font-medium w-full text-gray-700 focus:outline-none focus:ring focus:border-gray-700 p-2 rounded mb-2\"\r\n                            type='text'\r\n                            value={username}\r\n                            placeholder='e.g. username'\r\n                            onChange={(e) => onChange(e, setUsername)}\r\n                        />\r\n                    \r\n\r\n                    <input className=\"font-medium w-full text-gray-700 focus:outline-none focus:ring focus:border-gray-700 p-2 rounded mb-2\"\r\n                        type=\"password\"\r\n                        placeholder=\"e.g password\"\r\n                        onChange={(e) => onChange(e, setPassword)}\r\n                        value={password}\r\n                    />\r\n\r\n                    <button className=\"mt-6 w-full transition rounded border border-primary duration-300 ease-in-out text-xl text-extrabold uppercase bg-primary hover:bg-primary-dark py-2 px-4 text-gray-100\">Sign In </button>\r\n                </form>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*<div className=\"flex flex-row\">\r\n                        <img className=\"w-12\" src={iconUser} alt={iconUser} />\r\n                        <input className=\"font-medium w-full text-gray-700 focus:outline-none focus:ring focus:border-gray-700 p-2 rounded mb-2\"\r\n                            type='text'\r\n                            value={username}\r\n                            placeholder='e.g. username'\r\n                            onChange={(e) => onChange(e, setUsername)}\r\n                        />\r\n                    </div> */","export default function Objective({ src, title, description}){\r\n    return (\r\n        <article className=\"flex flex-col gap-2 items-center justify-center\">\r\n            <div className=\"w-full flex justify-center items-center\">\r\n                <img className=\"w-4/5\" src={src} alt=\"objetive\" />\r\n            </div>\r\n            <h3 className=\"text-lg font-extrabold text-gray-800\">{title}</h3>\r\n            <p className=\"text-base font-light text-gray-600 text-justify\">{description}</p>\r\n        </article>\r\n    )\r\n}","import Objective from './Objective/Objective'\r\n\r\nexport default function Objectives() {\r\n    return (\r\n        <section className=\"flex gap-2 items-center justify-center w-4/5\">\r\n            <Objective\r\n                src=\"https://media.discordapp.net/attachments/898423740273131570/909546597061378048/Team_meeting_Monochromatic.png\"\r\n                title=\"Trabajo en equipo\"\r\n                description=\"A trabajar con otras personas de manera productiva\"\r\n            />\r\n\r\n            <Objective\r\n                src=\"https://media.discordapp.net/attachments/898423740273131570/909546589536780358/Designer__Isometric.png\"\r\n                title=\"Diseño\"\r\n                description=\"Creacion de maquetas para diferentes sitios web\"\r\n            />\r\n\r\n            <Objective\r\n                src=\"https://media.discordapp.net/attachments/898423740273131570/909546597455646801/Progress__Outline.png\"\r\n                title=\"Programación de páginas\"\r\n                description=\"A programar desde 0 paginas usando tecnologias web\"\r\n            />\r\n        </section>\r\n    )\r\n}","import Objectives from '../../Components/About/Objectives/Objectives'\r\nexport default function About(){\r\n    return <section className=\"w-full flex flex-col gap-4 items-center justify-center\">\r\n        <h2 className=\"text-2xl text-gray-600 font-semibold my-3\">Programacion web es una materia enfocada en </h2>\r\n        <Objectives />\r\n\r\n    </section>\r\n}","import { useNavigate } from \"react-router\";\r\nimport { useUserContext } from \"../../../contexts/UserContext\";\r\n\r\nexport const Logout = () => {\r\n    const { logout } = useUserContext();\r\n    const navigate = useNavigate();\r\n\r\n    const logoutHandler = () => {\r\n        logout()\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <button onClick={logoutHandler} className=\" m-4 transition rounded border border-primary duration-300 ease-in-out text-sm text-extrabold uppercase bg-primary hover:bg-primary-dark py-2 px-4 text-gray-100\">\r\n            Log out\r\n        </button>\r\n    );\r\n};","import { useState } from \"react\";\r\nimport { useUserContext } from \"../../../contexts/UserContext\";\r\n\r\nexport const Post = ({name}) => {\r\n    const { posts } = useUserContext();\r\n    const [title, setTitle] = useState (\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    const onChange = (e, save) => {\r\n        save(e.target.value)\r\n    }\r\n\r\n    const postHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        //esto es solo para verificar en consola, se puede eliminar\r\n        console.log(title);\r\n        console.log(description);\r\n        console.log(image);\r\n\r\n        //esto esta comentado por el momento para no hacer post de algo equivocado\r\n        const posted = await posts(title, description, image);\r\n        setError(!posted);\r\n        \r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        setImage(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={postHandler} className=\"flex flex-col rounded gap-y-5 p-10 w-3/5 bg-secondary shadow-lg\">\r\n            <h2 className=\"text-black font-monserrat font-black text-5xl text-center\">{name}</h2>\r\n            <h3 className=\"text-black font-monserrat text-center text-2x1 mb-5\">Llenar los siguientes datos</h3>\r\n            {\r\n                error && (<p className=\"w-full rounded p-4 text-center text-white font-roboto bg-red-600 select-none\">\r\n                    Un error ha ocurrido en la creacion del post \r\n                </p>)\r\n            }\r\n            <input \r\n                type=\"text\" \r\n                className=\"w-full text-gray-700 bg-white focus:outline-none focus:ring focus:border-gray-600 p-3 rounded\"\r\n                placeholder=\"titulo\"\r\n                value={title}\r\n                onChange={(e) => onChange(e, setTitle)}\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                className=\"w-full h-32 text-gray-700 bg-white focus:outline-none focus:ring focus:border-gray-600 p-3 rounded\"\r\n                placeholder=\"descripción\"\r\n                value={description}\r\n                onChange={(e) => onChange(e, setDescription)}\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                className=\"w-full text-gray-700 bg-white focus:outline-none focus:ring focus:border-gray-600 p-3 rounded\"\r\n                placeholder=\"url de la imagen\"\r\n                value={image}\r\n                onChange={(e) => onChange(e, setImage)}\r\n            />\r\n            <button className=\"mt-6 mx-40 transition rounded border border-primary duration-300 ease-in-out text-lg text-extrabold uppercase bg-primary hover:bg-primary-dark py-2 px-4 text-gray-100\">\r\n                Post\r\n            </button>\r\n        </form>\r\n    );\r\n};","\r\nexport const Button = ({ name, onSubmit }) => {\r\n    \r\n    const navigateHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"button: ejecutando onSubmit\");\r\n        onSubmit();\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={navigateHandler}>\r\n            <button type=\"submit\"\r\n                className=\"transition rounded border border-primary duration-300 ease-in-out text-lg text-extrabold uppercase bg-primary hover:bg-primary-dark py-2 px-4 text-gray-100\">\r\n                    {name}\r\n            </button>\r\n        </form>\r\n    )\r\n};","export const ButtonActive = ({ name, onSubmit }) => {\r\n    \r\n    const navigateHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"clic boton\");\r\n        \r\n        onSubmit();\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={navigateHandler}>\r\n            <button type=\"submit\"\r\n                className=\"transition rounded border border-primary duration-300 ease-in-out text-lg text-extrabold uppercase bg-primary hover:bg-primary-dark py-2 px-4 text-gray-100\">\r\n                    {name}\r\n            </button>\r\n        </form>\r\n    )\r\n};","import { useState } from \"react\";\r\nimport { useUserContext } from \"../../../contexts/UserContext\";\r\n\r\nexport const Edit = ({name, _id}) => {\r\n    const { edits } = useUserContext();\r\n    const [title, setTitle] = useState (\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    const onChange = (e, save) => {\r\n        save(e.target.value)\r\n    }\r\n\r\n    const editHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        //esto es solo para verificar en consola, se puede eliminar\r\n        console.log(title);\r\n        console.log(description);\r\n        console.log(image);\r\n\r\n        //esto esta comentado por el momento para no hacer post de algo equivocado\r\n        const edited = await edits(title, description, image, _id);\r\n        setError(!edited);\r\n        \r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        setImage(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={editHandler} className=\"flex flex-col rounded gap-y-5 p-6 py-7\">\r\n            <h4 className=\"text-black font-monserrat font-black text-4xl mb-5 text-center\">{name}</h4>\r\n            {\r\n                error && (<p className=\"w-full rounded p-4 text-center text-white font-roboto bg-red-600 select-none\">\r\n                    Un error ha ocurrido al editar el post <br /> Ningún campo debe quedar vacio\r\n                </p>)\r\n            }\r\n            <input \r\n                type=\"text\" \r\n                className=\"font-semibold w-full text-gray-700 bg-white focus:outline-none focus:ring focus:border-gray-600 p-3 rounded\"\r\n                placeholder=\"Edita el titulo\"\r\n                value={title}\r\n                onChange={(e) => onChange(e, setTitle)}\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                className=\"font-semibold w-full text-gray-700 bg-white focus:outline-none focus:ring focus:border-gray-600 p-3 rounded\"\r\n                placeholder=\"Edita la descripción\"\r\n                value={description}\r\n                onChange={(e) => onChange(e, setDescription)}\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                className=\"font-semibold w-full text-gray-700 bg-white focus:outline-none focus:ring focus:border-gray-600 p-3 rounded\"\r\n                placeholder=\"Edita el url de la imagen\"\r\n                value={image}\r\n                onChange={(e) => onChange(e, setImage)}\r\n            />\r\n            <button className=\"mt-6 mx-40 transition rounded border border-primary duration-300 ease-in-out text-lg text-extrabold uppercase bg-primary hover:bg-primary-dark py-2 px-4 text-gray-100\">\r\n                Editar\r\n            </button>\r\n        </form>\r\n    );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"../Button/Button\";\r\nimport  { ButtonActive } from \"../Button/ButtonActive\";\r\nimport { useUserContext } from \"../../../contexts/UserContext\";\r\nimport { Edit } from \"./Edit\";\r\n\r\n//no se esta cargando correctamente\r\nexport const PostCard = ({ post }) => {\r\n    // console.log(\"postcard:\")\r\n    // console.log(post);\r\n    const [aComment, setDescription] = useState(\"\");\r\n    \r\n    const [error, setError] = useState(false);\r\n    const { edits, like, favorite, comment, activeApost } = useUserContext();\r\n    const { user, _id, title, description, image, likes, comments } = post\r\n    const [numLike, setNumLike] = useState(likes.length);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n\r\n    const onChange = (e, save) => {\r\n        save(e.target.value)\r\n    }\r\n\r\n    const postHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        //esto es solo para verificar en consola, se puede eliminar\r\n        console.log(_id);\r\n        console.log(aComment);\r\n\r\n        //esto esta comentado por el momento para no hacer post de algo equivocado\r\n        const makeAcomment = await comment(_id, aComment);\r\n        setError(!makeAcomment);       \r\n        \r\n        setDescription(\"\");\r\n    }\r\n\r\n    const giveAlike = () => {\r\n        like(_id);\r\n        if(isLiked) setNumLike(numLike - 1);\r\n\t        else setNumLike(numLike + 1);\r\n\t    setIsLiked(!isLiked);\r\n  \r\n    }\r\n     const giveAcomment = () => {\r\n\r\n     }\r\n\r\n    return (\r\n        <div className=\"flex flex-col rounded gap-y-5 p-6 my-10 w-3/5 bg-secondary shadow-lg\">\r\n            <div className=\"font-semibold w-auto h-auto text-gray-700 bg-secondary focus:outline-none focus:ring focus:border-gray-600 p-2 rounded\">\r\n                <img src={image} alt={image} />\r\n            </div>\r\n\r\n            <div className=\"w-full h-auto text-gray-700 focus:outline-none px-3 \">\r\n                <div>\r\n                    <p className=\"text-3xl font-bold\">{title}</p>\r\n                    <p className=\"font-semibold mb-2\">@{user.username}</p>\r\n                </div>\r\n            </div>\r\n    \r\n            <div className=\"w-full h-auto text-gray-700 bg-secondary focus:outline-none focus:ring focus:border-gray-600 pl-3 pb-3 rounded\">\r\n                {description}\r\n            </div>\r\n            \r\n            <div className=\"flex md:flex-1 space-x-4 items-center justify-start mt-2\">\r\n                <Button name=\"Me gusta\" type=\"submit\" \r\n                    onSubmit= {() => { giveAlike() }}\r\n                    />\r\n                    <p>Me gustas: {numLike}</p>\r\n                        \r\n                <Button name=\"Favorito\" type=\"submit\" onSubmit={() => {favorite(_id)}}/>\r\n                    \r\n                <ButtonActive name=\"Ocultar\" type=\"submit\" onSubmit={() => {activeApost(_id)}}/>\r\n            </div>\r\n            <hr />\r\n            <form onSubmit={postHandler} className=\"flex flex-row rounded gap-y-5 p-3 py-2 w-full bg-blue-50 justify-start items-center\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"font-semibold w-full h-3/5 text-gray-700 bg-transparent focus:outline-none focus:ring focus:border-gray-600 p-3 rounded\"\r\n                        placeholder=\"Escribir comentario\"\r\n                        value={ aComment }\r\n                        onChange={(e) => onChange(e, setDescription)}\r\n                    />\r\n\r\n                    <button className=\"transition rounded border border-primary duration-300 ease-in-out text-lg text-extrabold uppercase bg-primary hover:bg-primary-dark py-2 px-4 text-gray-100\">\r\n                        Comentar\r\n                    </button>\r\n            </form>\r\n            \r\n            <div>\r\n                <div className=\"bg-white p-5\">\r\n                    <h5>{comments.length} comentarios</h5>\r\n                    \r\n                    <div>\r\n                    {\r\n                        comments.map((acomment) => {\r\n                            return  (\r\n                                <div className=\"flex\"> \r\n                                    <p className=\"font-bold\">{acomment.user.username}:</p>\r\n                                    <p className=\"px-1\">{acomment.description}</p>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Edit name=\"Editar el post\" _id={_id} />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};","import { useEffect, useState } from \"react\";\r\nimport { useUserContext } from \"../../../contexts/UserContext\";\r\nimport { PostCard } from \"../../User/PostCard/PostCard\";\r\nimport { Button } from \"../../User/Button/Button\";\r\n\r\nexport const MyPosts = () => {\r\n    const limit = 15;\r\n    const {myPost} = useUserContext();\r\n    const [page, setPage] = useState(0);\r\n    const [pages, setPages] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    \r\n    useEffect( () => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const {data: myPostedPosts, pages} = await myPost(limit, page);\r\n\r\n                if(myPostedPosts.length == 0){ \r\n                    // console.log(`array vacio`)\r\n                    // console.log(myPostedPosts);\r\n                    setError(true);\r\n                }\r\n                else {\r\n                    // console.log(`array lleno`)\r\n                    // console.log(myPostedPosts);\r\n                    // console.log(pages);\r\n                    setPosts(myPostedPosts);\r\n                    setPages(pages);\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n\r\n    }, [page]);\r\n\r\n    const previousPage = () => {\r\n        // console.log(`pagina actual:  ${page}`);\r\n        if (page !== 0) {\r\n            setPage((pageNumber) => pageNumber-1);\r\n            // console.log(`pagina resultante:  ${page}`);\r\n            // console.log(`pagina resultante alt:  ${page-1}`);\r\n        }\r\n        // else {\r\n        //     console.log(\"no se cambio de pagina\")\r\n        // }\r\n    };\r\n\r\n    const nextPage = () => {\r\n        // console.log(`pagina actual:  ${page}`);\r\n        if (page+1 < pages) {\r\n            setPage((pageNumber) => pageNumber+1);\r\n            // console.log(`pagina resultante:  ${page}`);\r\n            // console.log(`pagina resultante alt:  ${page+1}`);\r\n        }\r\n        // else {\r\n        //     console.log(\"no se cambio de pagina\")\r\n        // }\r\n    }; \r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-center items-center p-6\">\r\n            <h2 className=\"text-black font-monserrat font-black text-5xl text-center mt-10\">Mis Posts</h2>\r\n            {\r\n                error && (<p className=\"w-3/4 rounded p-4 text-center text-black font-roboto bg-blue-200 select-none\">\r\n                    No se encontró ningun post\r\n                </p>)\r\n            }\r\n            {\r\n                posts.map((post) => {\r\n                    return <PostCard key={post._id} post={post} />\r\n                })\r\n            }\r\n\r\n            <div className=\"flex flex-row justify-evenly items-center\">\r\n                <Button name=\"Página anterior\" type=\"submit\" onSubmit={previousPage} />\r\n                <div className=\"mt-6 mx-40 transition rounded border border-secondary duration-300 ease-in-out text-lg text-extrabold uppercase bg-secondary hover:bg-secondary-dark py-2 px-4 text-gray-100\">\r\n                    {page}\r\n                </div>\r\n                <Button name=\"Página siguiente\" type=\"submit\" onSubmit={nextPage} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n    \r\n};\r\n","import { Logout } from '../../Components/User/Logout/Logout';\r\nimport { Post } from '../../Components/Admin/Post/Post';\r\nimport { MyPosts } from '../../Components/Admin/MyPosts/MyPosts';\r\n\r\nexport default function Admin() {\r\n\r\n    return (\r\n        <section className=\"bg-gradient-to-bl from-pink-100 to-indigo-100\">\r\n            <header className=\"flex flex-row justify-end items-center\">\r\n                <Logout />\r\n            </header>\r\n            <div className=\"flex flex-col justify-around items-center p-6\">\r\n                <Post name=\"Crear un post\" />\r\n            </div>\r\n\r\n            <div>\r\n                <MyPosts />\r\n            </div>            \r\n\r\n        </section>\r\n    );\r\n};\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { useUserContext } from \"../../../contexts/UserContext\";\r\nimport { PostCard } from \"../../User/PostCard/PostCard\";\r\nimport { Button } from \"../Button/Button\";\r\n\r\nexport const AllPosts = () => {\r\n    const limit = 10;\r\n    const {allPost} = useUserContext();\r\n    const [page, setPage] = useState(0);\r\n    const [pages, setPages] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    \r\n    useEffect( () => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const {data: allPostedPosts, pages} = await allPost(limit, page);\r\n\r\n                if(allPostedPosts.length == 0){ \r\n                    // console.log(`array vacio`)\r\n                    // console.log(allPostedPosts);\r\n                    setError(true);\r\n                }\r\n                else {\r\n                    // console.log(`array lleno`)\r\n                    // console.log(allPostedPosts);\r\n                    // console.log(pages);\r\n                    setPosts(allPostedPosts);\r\n                    setPages(pages)\r\n                };\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n\r\n    }, [page]);\r\n\r\n        const previousPage = () => {\r\n        // console.log(`pagina actual:  ${page}`);\r\n        if (page !== 0) {\r\n            setPage((pageNumber) => pageNumber-1);\r\n            // console.log(`pagina resultante:  ${page}`);\r\n            // console.log(`pagina resultante alt:  ${page-1}`);\r\n        }\r\n        // else {\r\n        //     console.log(\"no se cambio de pagina\")\r\n        // }\r\n    };\r\n\r\n    const nextPage = () => {\r\n        // console.log(`pagina actual:  ${page}`);\r\n        if (page+1 < pages) {\r\n            setPage((pageNumber) => pageNumber+1);\r\n            // console.log(`pagina resultante:  ${page}`);\r\n            // console.log(`pagina resultante alt:  ${page+1}`);\r\n        }\r\n        // else {\r\n        //     console.log(\"no se cambio de pagina\")\r\n        // }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-center items-center p-6\">\r\n            <h2 className=\"uppercase text-black font-monserrat font-black text-4xl text-center mt-10\">Todos los post</h2>\r\n            {\r\n                error && (<p className=\"w-3/4 rounded p-4 text-center text-black font-roboto bg-blue-200 select-none\">\r\n                    No se encontró ningun post\r\n                </p>)\r\n            }\r\n            {\r\n                posts.map((post) => {\r\n                    return  <PostCard key={post._id} post={post} />\r\n                })\r\n            }\r\n\r\n            <div className=\"flex flex-row justify-center items-center\">\r\n                <Button name=\"Página anterior\" type=\"submit\" onSubmit={previousPage} />\r\n                <div className=\"mt-6 mx-40 transition rounded border border-pink-500 duration-300 ease-in-out text-lg text-extrabold uppercase bg-pink-500 hover:bg-pink-700 py-2 px-4 text-gray-100\">\r\n                    {page}\r\n                </div>\r\n                <Button name=\"Página siguiente\" type=\"submit\" onSubmit={nextPage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { useUserContext } from '../../contexts/UserContext'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Logout } from '../../Components/User/Logout/Logout'\r\nimport { AllPosts } from './../../Components/User/AllPosts/AllPosts'\r\nimport { AllFav } from \"./../../Components/User/AllPosts/AllFav\"\r\n\r\nexport default function User() {\r\n    \r\n\r\n    return (\r\n        <section className=\"bg-gradient-to-r from-indigo-600 via-gray-50 to-gray-50\">\r\n            <header className=\"flex flex-row justify-end items-center bg-transparent\">\r\n                <Logout />\r\n            </header>\r\n                \r\n                <div>\r\n                    <AllPosts />\r\n                </div>\r\n        </section>\r\n    )\r\n    \r\n}","import { ImSad } from \"react-icons/all\";\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const onClick = (e) => {\r\n        navigate('/login')\r\n    }\r\n\r\n    return(\r\n        <div className=\"flex flex-col justify-center items-center w-screen h-screen bg-black\">\r\n            <ImSad className=\"text-8xl text-white m-4\"/>\r\n            <h2 className=\"text-6xl font-roboto text-white text-center mb-6\">404</h2>\r\n            <h3 className=\"text-xl font-roboto text-white text-center\">Page not found</h3>\r\n            <p className=\"text-lg font-roboto text-white text-center\">The page you are looking for doesn't exist or an other error occurred</p>\r\n            <button className=\"font-roboto bg-gray-300 m-4 py-2 px-4 rounded\" onClick={(e) => onClick(e)}>Go to Login</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import { useUserContext } from '../../contexts/UserContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst rolePages = {\r\n  \"admin\": \"/admin\",\r\n  \"user\": \"/user\"\r\n}\r\n\r\nconst RedirectUser = () => {\r\n  const { user } = useUserContext();\r\n\r\n  if(!user) return <p> No se puede redireccionar </p>;\r\n\r\n  return <Navigate replace to={rolePages[user.role] ?? \"/\"} />\r\n}\r\n\r\nexport default RedirectUser;","import { useUserContext } from './../../contexts/UserContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({role=\"user\", children }) => {\r\n  const { token, user } = useUserContext();\r\n  \r\n  if(!token) return <Navigate replace to=\"/login\"/>;\r\n  if(!user || user.role !== role) return <Navigate replace to=\"/404\"/>;\r\n\r\n  return children;\r\n}\r\n\r\nexport default PrivateRoute;","import Login from './pages/Login/Login';\r\nimport About from './pages/About/About'\r\nimport Admin from './pages/Admin/Admin';\r\nimport User from './pages/User/User';\r\nimport NotFound from './pages/NotFound/NotFound';\r\nimport RedirectUser from './pages/Redirect/RedirectUser';\r\n\r\n\r\nimport Private from './Components/PrivateRoute/PrivateRoute';\r\n\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\n// import {  } from ''\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>        \r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route path=\"/redirect\" element={<RedirectUser />}/>\r\n        \r\n        <Route path=\"/admin\"  element={<Private role=\"admin\"><Admin /></Private>} />\r\n        <Route path=\"/user\"   element={<Private role=\"user\"> <User /> </Private>} />\r\n\r\n        \r\n        \r\n        <Route path=\"*\" element={<NotFound />}/>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { UserProvider } from './contexts/UserContext'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}